package main

import (
	"database/sql"
)

{{ range $ii, $KaynakBilgi := . }}
//{{$ii}}. {{$KaynakBilgi.SinifAdi}}  **************************************************************************************************

//{{ "{{" }} .{{$KaynakBilgi.SinifAdi}} {{ "}}" }}


func {{$KaynakBilgi.SinifAdi}}SelectAll(db *sql.DB) []{{$KaynakBilgi.SinifAdi}} {
	rows, err := db.Query("Select {{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.DbAlanAdi}}{{ if eq $i 0 }}{{$e.DbAlanAdi}}{{ else }}, {{$e.DbAlanAdi}}{{ end }}{{ end }}{{ end }} from {{$KaynakBilgi.TabloAdi}}")
	CheckErr(err)
	var result  []{{$KaynakBilgi.SinifAdi}}
	for rows.Next() {
		item :={{$KaynakBilgi.SinifAdi}}{}
		err2 := rows.Scan({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.AlanAdi}}{{ if eq $i 0 }}&item.{{$e.AlanAdi}}{{ else }}, &item.{{$e.AlanAdi}}{{ end }}{{ end }}{{ end }})
		CheckErr(err2)
		result = append(result, item)
	}
	return result
}


func {{$KaynakBilgi.SinifAdi}}Select(db *sql.DB, id int) {{$KaynakBilgi.SinifAdi}} {
	item := {{$KaynakBilgi.SinifAdi}}{}
	if id > 0 {
		row := db.QueryRow("Select {{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.DbAlanAdi}}{{ if eq $i 0 }}{{$e.DbAlanAdi}}{{ else }}, {{$e.DbAlanAdi}}{{ end }}{{ end }}{{ end }} from {{$KaynakBilgi.TabloAdi}} where id=?", id)
		err := row.Scan({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.AlanAdi}}{{ if eq $i 0 }}&item.{{$e.AlanAdi}}{{ else }}, &item.{{$e.AlanAdi}}{{ end }}{{ end }}{{ end }})
		CheckErr(err)
	}
	return item
}

func {{$KaynakBilgi.SinifAdi}}Insert(db *sql.DB, item {{$KaynakBilgi.SinifAdi}}) int64 {
	var r int64
	stmt, err := db.Prepare("INSERT INTO {{$KaynakBilgi.TabloAdi}}({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.DbAlanAdi}}{{ if eq $i 0 }}{{ else }}{{ if eq $i 1 }}{{$e.DbAlanAdi}}{{ else }}, {{$e.DbAlanAdi}}{{ end }}{{ end }}{{ end }}{{ end }}) VALUES ({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.DbAlanAdi}}{{ if eq $i 0 }}{{ else }}{{ if eq $i 1 }}?{{ else }},?{{ end }}{{ end }}{{ end }}{{ end }})")
	CheckErr(err)
	defer stmt.Close()
	ret, err := stmt.Exec({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.AlanAdi}}{{ if eq $i 0 }}{{ else }}{{ if eq $i 1 }}item.{{$e.AlanAdi}}{{ else }}, item.{{$e.AlanAdi}}{{ end }}{{ end }}{{ end }}{{ end }})
	CheckErr(err)
	r,err = ret.LastInsertId()
	CheckErr(err)
	return r
}

func {{$KaynakBilgi.SinifAdi}}Update(db *sql.DB, item {{$KaynakBilgi.SinifAdi}}) {
	stmt, err := db.Prepare("Update {{$KaynakBilgi.TabloAdi}} set {{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.DbAlanAdi}}{{ if eq $i 0 }}{{ else }}{{ if eq $i 1 }}{{$e.DbAlanAdi}}=?{{ else }}, {{$e.DbAlanAdi}}=?{{ end }}{{ end }}{{ end }}{{ end }} WHERE id=?")
	CheckErr(err)
	defer stmt.Close()
	_, err2 := stmt.Exec({{ range $i, $e := $KaynakBilgi.Alanlar }}{{if $e.AlanAdi}}{{ if eq $i 0 }}{{ else }}{{ if eq $i 1 }}item.{{$e.AlanAdi}}{{ else }}, item.{{$e.AlanAdi}}{{ end }}{{ end }}{{ end }}{{ end }}, item.Id)
	CheckErr(err2)
}

{{ range $i, $ee := $KaynakBilgi.Alanlar }}{{ if eq $ee.IsForeignKey true }}
func {{$KaynakBilgi.SinifAdi}}SelectMasterId(db *sql.DB, Masterid int64) []{{$KaynakBilgi.SinifAdi}} {
	rows, err := db.Query("Select {{ range $i, $e := $KaynakBilgi.Alanlar }}{{ if eq $i 0 }}{{$e.DbAlanAdi}}{{ else }}, {{$e.DbAlanAdi}}{{ end }}{{ end }} from {{$KaynakBilgi.TabloAdi}} where {{ $ee.DbAlanAdi}}=?", Masterid)
	CheckErr(err)
	var result  []{{$KaynakBilgi.SinifAdi}}
	for rows.Next() {
		item :={{$KaynakBilgi.SinifAdi}}{}
		err2 := rows.Scan({{ range $i, $e := $KaynakBilgi.Alanlar }}{{ if eq $i 0 }}&item.{{$e.AlanAdi}}{{ else }}, &item.{{$e.AlanAdi}}{{ end }}{{ end }})
		CheckErr(err2)
		result = append(result, item)
	}
	return result
}{{ end }}{{ end }}

{{end}}