package main

import (
	"net/http"
	"strconv"
	"time"
)

func FormValueInt64(request *http.Request, s string) int64 {
	r, _ := strconv.ParseInt(request.FormValue(s), 10, 64)
	return r
}

func FormValueInt(request *http.Request, s string) int {
	r, _ := strconv.Atoi(request.FormValue(s))
	return r
}

func FormValueDouble(request *http.Request, s string) float64 {
	r, _ := strconv.ParseFloat(request.FormValue(s), 32)
	return r
}

func FormValueBool(request *http.Request, s string) bool {
	r, _ := strconv.ParseBool(request.FormValue(s))
    return r
}

func FormValueBoolCheckbox(request *http.Request, s string) bool {
	r:=false
	if (len(request.Form[s])>0){
			r=true
	}
	return r
}



func FormValueDate(request *http.Request, s string) time.Time {
	r, _ := time.Parse("2006-01-02", request.FormValue(s))
	return r
}

func HandleFuncAdd() {
{{ range $ii, $KaynakBilgi := . }}{{if $KaynakBilgi.SinifAdi}}
    http.HandleFunc("/{{$KaynakBilgi.SinifAdi | ToLover}}ler.html",{{$KaynakBilgi.SinifAdi}}lerHandler)
	http.HandleFunc("/{{$KaynakBilgi.SinifAdi | ToLover}}.html",{{$KaynakBilgi.SinifAdi}}Handler)
	http.HandleFunc("/{{$KaynakBilgi.SinifAdi | ToLover}}kaydet",{{$KaynakBilgi.SinifAdi}}KaydetHandler)
	http.HandleFunc("/{{$KaynakBilgi.SinifAdi | ToLover}}sil",{{$KaynakBilgi.SinifAdi}}SilHandler)

{{ end }}{{ end }}
}
//-----------------------------------------------------------------------

{{ range $ii, $KaynakBilgi := . }}{{if $KaynakBilgi.SinifAdi}}

{{if $KaynakBilgi.DetailTablo }}
func {{$KaynakBilgi.SinifAdi}}lerHandler(response http.ResponseWriter, request *http.Request) {
	request.ParseForm()
	MasterId:=FormValueInt64(request,"id")
	fData  := {{$KaynakBilgi.SinifAdi}}SelectMasterId(db,MasterId)
    context := Context{Data: fData, MasterId:MasterId}
	context.Gezgin=GetGezgin(MasterId,"{{$KaynakBilgi.SinifAdi | ToLover}}")

	render(response, request, "{{$KaynakBilgi.SinifAdi | ToLover}}ler", context)
}
{{else}}
func {{$KaynakBilgi.SinifAdi}}lerHandler(response http.ResponseWriter, request *http.Request) {
	fData  := {{$KaynakBilgi.SinifAdi}}SelectAll(db)
	context := Context{Data: fData}
	context.Gezgin=GetGezgin(0,"{{$KaynakBilgi.SinifAdi | ToLover}}ler")

	render(response, request, "{{$KaynakBilgi.SinifAdi | ToLover}}ler", context)
}
{{ end }}


func {{$KaynakBilgi.SinifAdi}}Handler(response http.ResponseWriter, request *http.Request) {
    request.ParseForm()
    MasterId :=int64(0)
	id := FormValueInt64(request,"id")
    item := {{$KaynakBilgi.SinifAdi}}Select(db, id)
    {{ range $i, $ee := $KaynakBilgi.Alanlar }}{{ if eq $ee.IsForeignKey true }}
    MasterId =item.{{ $ee.AlanAdi}}
    if item.{{ $ee.AlanAdi}}==0{
        item.{{ $ee.AlanAdi}}=FormValueInt64(request,"MasterId")
        MasterId =item.{{ $ee.AlanAdi}}
    }
    {{ end }}{{ end }}
    context := Context{Data: item}

    context.Gezgin=GetGezgin(MasterId,"{{$KaynakBilgi.SinifAdi | ToLover}}")

	render(response, request, "{{$KaynakBilgi.SinifAdi | ToLover}}", context)

}

func {{$KaynakBilgi.SinifAdi}}KaydetHandler(response http.ResponseWriter, request *http.Request) {
	request.ParseForm()
	MasterId :=int64(0)

	id := FormValueInt64(request,"id")
	item := {{$KaynakBilgi.SinifAdi}}Select(db, id)

	{{ range $i, $e := $KaynakBilgi.Alanlar }}
	    {{if $e.DbAlanAdi}}
	        {{ if eq $i 0 }}

	        {{ else }}
	            {{ if eq $e.AlanVeriTuru "string" }}
	                item.{{$e.AlanAdi}} =  request.FormValue("{{$e.AlanAdi | ToLover}}")
	            {{else if eq $e.AlanVeriTuru "int64" }}
	                item.{{$e.AlanAdi}} =  FormValueInt64(request,"{{$e.AlanAdi | ToLover}}")
	            {{else if eq $e.AlanVeriTuru "bool" }}
	                {{if eq $e.HtmlInputType "checkbox" }}
                	    item.{{$e.AlanAdi}} =  FormValueBoolCheckbox(request,"{{$e.AlanAdi | ToLover}}")
                	{{ else }}
                	    item.{{$e.AlanAdi}} =  FormValueBool(request,"{{$e.AlanAdi | ToLover}}")
	                {{ end }}
	            {{ else }}
	                //item.{{$e.AlanAdi}} =  request.FormValue("{{$e.AlanAdi | ToLover}}")
	            {{ end }}
	        {{ end }}
	    {{ end }}
	{{ end }}

    {{ range $i, $e := $KaynakBilgi.Alanlar }}
        {{ if eq $e.IsForeignKey true }}
    	    MasterId =item.{{ $e.AlanAdi}}
        {{ end }}
    {{ end }}

	context := Context{}

	//if len(item.ProjeAdi) > 0 {
		if id > 0 {
			{{$KaynakBilgi.SinifAdi}}Update(db, item)
		} else {
			item.Id = {{$KaynakBilgi.SinifAdi}}Insert(db, item)
		}
		context.Message = "Kayıt yapıldı"
	//} else {
	//	context.Message = "Lütfen Zorunlu alanları giriniz"
	//}

	context.Data = item
	context.Gezgin=GetGezgin(MasterId,"{{$KaynakBilgi.SinifAdi | ToLover}}")
	render(response, request, "{{$KaynakBilgi.SinifAdi | ToLover}}", context)

}

func {{$KaynakBilgi.SinifAdi}}SilHandler(response http.ResponseWriter, request *http.Request) {
	request.ParseForm()
	MasterId :=int64(0)
	id := FormValueInt64(request,"id")
	item := {{$KaynakBilgi.SinifAdi}}Select(db, id)
	{{ range $i, $e := $KaynakBilgi.Alanlar }}
        {{ if eq $e.IsForeignKey true }}
    	    MasterId =item.{{ $e.AlanAdi}}
        {{ end }}
    {{ end }}


	context := Context{}

		if id > 0 {
			{{$KaynakBilgi.SinifAdi}}Delete(db, id)
			context.Message = "Kayıt Silindi"
		} else{
			context.Message = "Kayıt Bulunamadı"
		}

	context.Data = item
	context.Gezgin=GetGezgin(MasterId,"{{$KaynakBilgi.SinifAdi | ToLover}}")
	render(response, request, "{{$KaynakBilgi.SinifAdi | ToLover}}", context)
}




{{ end }}{{ end }}